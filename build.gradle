plugins {
    id 'java'
    id 'jacoco'  // JaCoCo plugin for code coverage
    id 'maven-publish'  // Add this line to apply the maven-publish plugin
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Use Java 17 or any compatible version like 11 or 20
    }
}

group = 'edu.csudh.lsu.persistence'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

ext {
    springBootVersion = '3.3.2'
    sharedLoggingVersion = '3.7.0'
    springBootDependencyManagement = '1.0.9.RELEASE'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'com.h2database:h2:2.2.220'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'net.bytebuddy:byte-buddy:1.14.18'
    testImplementation 'org.objenesis:objenesis:3.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.mockito:mockito-core:3.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.4.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
}

tasks.named('processResources') {
    from('src/main/resources') {
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                "applicationVersion": version.toString(),
                "applicationBuildTimestamp": getDate()
        ], beginToken: '^', endToken: '^')
    }
}

tasks.withType(JavaCompile) {
    options.release = 17 // Or another supported version like 11 or 20
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('MM-dd-yyyy HH:mm:ss')
    return formattedDate
}

jacocoTestReport {
    reports {
        xml.required = true // Ensure XML report is enabled correctly
        csv.required = false
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/model/**',
                    '**/repository/**',
                    '**/constants/**'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80 // 80% coverage
            }
            excludes = [
                    './edu/csudh/lsu/persistence/model/**',
                    './edu/csudh/lsu/persistence/repository/**',
                    './edu/csudh/lsu/persistence/constants/**'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Loker-Student-Union-Inc/csudh-lsu-cockroachdb-persistance")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME_GITHUB")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}


